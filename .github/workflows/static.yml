# Simple workflow for deploying static content to GitHub Pages
name: Deploy static content to Pages

on:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
  schedule:
    # https://crontab.cronhub.io/
    # - cron: "5/15 14-23 7-8 3 *" # Week 2
    # - cron: "5/15 14-23 15-16 3 *" # Week 3
    # - cron: "5/15 13-22 21-22 3 *" # Week 4
    - cron: "5/15 13-22 4-5 4 *" # Week 6
  push:
    branches:
      - main

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Single deploy job since we're just deploying
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Pages
        uses: actions/configure-pages@v5
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Pip Install
        run: |
          pip install -r requirements.txt
          pip install -r requirements-live.txt

      - name: Export Shiny App
        run: shinylive export . site

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: 'site'
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4